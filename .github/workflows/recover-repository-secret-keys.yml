# Assumption:
# You've created the following GitHub secrets in your repository:
# MY_CLIENT_SECRET - encrypt/decrypt with openssl - useful for public and public repositories
# MY_OPENSSL_PASSWORD - used to protect secrets
# MY_OPENSSL_ITER - Use a number of iterations on the password to derive the encryption key.
#                   High values increase the time required to brute-force the resulting file.
#                   This option enables the use of PBKDF2 algorithm to derive the key.

name: Recover Repository Environments Secret Keys
on: workflow_dispatch

jobs:
  openssl:
    name: RUN RECOVERING SECRET KEYS WITH OPENSSL
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - env:
          MY_OPENSSL_PASSWORD: ${{ secrets.MY_OPENSSL_PASSWORD }}
          MY_OPENSSL_ITER: ${{ secrets.MY_OPENSSL_ITER }}
          REACT_APP_SOLIDITY_CONTRACT_ADDRESS: ${{ secrets.REACT_APP_SOLIDITY_CONTRACT_ADDRESS }}
          INFURA_API_KEY: ${{ secrets.INFURA_API_KEY }}
          INFURA_API_SECRET_KEY: ${{ secrets.INFURA_API_SECRET_KEY }}
          INFURA_GOERLI_URL: ${{ secrets.INFURA_GOERLI_URL }}
          WALLET_PRIVATE_KEY: ${{ secrets.WALLET_PRIVATE_KEY }}
          ETHERSCAN_PRIVATE_KEY: ${{ secrets.ETHERSCAN_PRIVATE_KEY }}
        run: |
          echo "REACT_APP_SOLIDITY_CONTRACT_ADDRESS (openssl) = $(echo "${REACT_APP_SOLIDITY_CONTRACT_ADDRESS}" | openssl enc -e -aes-256-cbc -a -pbkdf2 -iter ${MY_OPENSSL_ITER} -k "${MY_OPENSSL_PASSWORD}")"
          echo "INFURA_API_KEY (openssl) = $(echo "${INFURA_API_KEY}" | openssl enc -e -aes-256-cbc -a -pbkdf2 -iter ${MY_OPENSSL_ITER} -k "${MY_OPENSSL_PASSWORD}")"
          echo "INFURA_API_SECRET_KEY (openssl) = $(echo "${INFURA_API_SECRET_KEY}" | openssl enc -e -aes-256-cbc -a -pbkdf2 -iter ${MY_OPENSSL_ITER} -k "${MY_OPENSSL_PASSWORD}")"
          echo "INFURA_GOERLI_URL (openssl) = $(echo "${INFURA_GOERLI_URL}" | openssl enc -e -aes-256-cbc -a -pbkdf2 -iter ${MY_OPENSSL_ITER} -k "${MY_OPENSSL_PASSWORD}")"
          echo "WALLET_PRIVATE_KEY (openssl) = $(echo "${WALLET_PRIVATE_KEY}" | openssl enc -e -aes-256-cbc -a -pbkdf2 -iter ${MY_OPENSSL_ITER} -k "${MY_OPENSSL_PASSWORD}")"
          echo "ETHERSCAN_PRIVATE_KEY (openssl) = $(echo "${ETHERSCAN_PRIVATE_KEY}" | openssl enc -e -aes-256-cbc -a -pbkdf2 -iter ${MY_OPENSSL_ITER} -k "${MY_OPENSSL_PASSWORD}")"
          echo "Copy the above value, and then execute locally:"
          echo "echo PASTE_HASH_HERE | openssl base64 -d | openssl enc -d -pbkdf2 -iter \$MY_OPENSSL_ITER -aes-256-cbc -k \$MY_OPENSSL_PASSWORD"
